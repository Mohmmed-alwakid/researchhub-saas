{
  "name": "afkar",
  "private": true,
  "version": "1.0.0",
  "description": "Afkar - SaaS platform for user testing research and feedback collection",
  "type": "module",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "dev": "concurrently \"npm run dev:client\" \"npm run dev:api\"",
    "dev:client": "vite",
    "dev:server": "nodemon src/server/index.ts",
    "dev:local": "node scripts/development/local-dev-server.js",
    "dev:fullstack": "node scripts/development/local-full-dev.js",
    "dev:status": "node scripts/development/simple-dev-status.mjs",
    "debug:start": "cross-env DEBUG=true npm run dev:fullstack",
    "debug:research": "cross-env DEBUG_MODE=research npm run dev:fullstack",
    "debug:performance": "cross-env DEBUG_PERFORMANCE=true npm run dev:fullstack",
    "debug:researcher": "cross-env DEBUG_ROLE=researcher npm run debug:start",
    "debug:participant": "cross-env DEBUG_ROLE=participant npm run debug:start",
    "debug:admin": "cross-env DEBUG_ROLE=admin npm run debug:start",
    "debug:console": "node scripts/debug/show-console.js",
    "debug:snapshot": "node scripts/debug/take-snapshot.js",
    "debug:validation": "node scripts/debug/show-validation.js",
    "debug:flow": "node scripts/debug/show-flow-analytics.js",
    "debug:errors": "node scripts/debug/show-errors.js",
    "debug:all": "node scripts/debug/complete-report.js",
    "build": "npm run build:client",
    "build:client": "vite build",
    "build:server": "tsc -p tsconfig.server.json && node generate-server-package.cjs",
    "start": "vercel dev",
    "lint": "eslint .",
    "preview": "vite preview",
    "tailwind:init": "tailwindcss init -p",
    "dev:api": "vercel dev",
    "deploy": "vercel --prod",
    "type-check": "tsc --noEmit",
    "audit:ui-ux": "node scripts/ui-ux-auditor.js",
    "lint:accessibility": "npm run audit:ui-ux | grep -E 'â™¿|accessibility'",
    "lint:design-tokens": "npm run audit:ui-ux | grep -E 'ðŸŽ¨|design'",
    "lint:mobile-friendly": "npm run audit:ui-ux | grep -E 'ðŸ“±|mobile'",
    "test:accessibility": "echo 'Running accessibility tests...' && npm run audit:ui-ux",
    "test:responsive": "echo 'Testing responsive design...' && npm run audit:ui-ux",
    "test:design-consistency": "echo 'Checking design consistency...' && npm run audit:ui-ux",
    "start-improvement": "node .framework/start-improvement.js",
    "team-dashboard": "node .framework/team-dashboard.js",
    "validate-framework": "node .framework/simplified-validator.js",
    "track-progress": "node scripts/vibe-coder-tracker.js report",
    "update-progress": "node scripts/simple-completion-tracker.js update",
    "vibe-tracker": "node scripts/vibe-coder-tracker.js",
    "vibe-progress": "node scripts/vibe-coder-tracker.js report",
    "vibe-current": "node scripts/vibe-coder-tracker.js current",
    "quality-gates": "npm run validate-framework && npm run track-progress",
    "pre-deploy": "npm run quality-gates && echo 'ðŸš€ Ready for deployment!'",
    "framework-setup": "node scripts/team-integration-setup.js",
    "framework-help": "echo 'ðŸŽ¯ Framework Commands:' && npm run | grep framework",
    "test": "npx playwright test",
    "test:framework": "node testing/minimal-test.js",
    "test:validate": "node testing/run-validation.js",
    "test:enhanced": "node testing/enhanced-application-test.js",
    "errors:test": "node scripts/testing/test-error-handling.mjs",
    "errors:validate": "npm run errors:test && echo 'âœ… Error handling system validated'",
    "dev-tools:test": "node scripts/testing/test-dev-tools.mjs",
    "dev-tools:validate": "npm run dev-tools:test && echo 'âœ… Development tools integration validated'",
    "jobs:test": "node scripts/testing/test-job-system.mjs",
    "jobs:validate": "npm run jobs:test && echo 'âœ… Background job management system validated'",
    "errors:demo": "node scripts/testing/test-error-handling.mjs && echo 'ðŸ“š See error handling examples above'",
    "test:playwright": "npx playwright test",
    "test:playwright:ui": "npx playwright test --ui",
    "test:playwright:debug": "npx playwright test --debug",
    "test:playwright:report": "npx playwright show-report testing/reports/playwright-html",
    "cleanup": "node scripts/cleanup/master-cleanup.js",
    "cleanup:dry-run": "powershell -ExecutionPolicy Bypass -File scripts/cleanup-final.ps1 -DryRun",
    "cleanup:verbose": "powershell -ExecutionPolicy Bypass -File scripts/cleanup-final.ps1 -Verbose",
    "cleanup:src-js": "node scripts/cleanup/clean-src-js.js",
    "organize": "npm run cleanup",
    "test:playwright:mcp": "node testing/playwright-mcp-runner.js",
    "test:visual:mcp": "npx playwright test testing/playwright-mcp/visual-regression.spec.js",
    "test:cross-browser": "npx playwright test testing/playwright-mcp/cross-browser-tests.spec.js",
    "test:e2e:mcp": "npx playwright test testing/playwright-mcp/study-creation-flow.spec.js",
    "test:quick": "node testing/comprehensive-testing-strategy/automated-regression-suite.cjs quick",
    "test:smoke": "node testing/automated/test-runner.js smoke",
    "test:full": "node testing/automated/test-runner.js all",
    "test:e2e": "npx playwright test testing/automated/e2e",
    "test:integration": "npx playwright test testing/automated/integration",
    "test:unit": "npm test -- --passWithNoTests",
    "test:performance": "node testing/performance/lighthouse-audit.js",
    "test:security": "node testing/security/security-audit.js",
    "test:a11y": "node testing/accessibility/a11y-audit.js",
    "test:visual": "npx playwright test testing/visual",
    "test:daily": "node testing/comprehensive-testing-strategy/automated-regression-suite.cjs daily",
    "test:weekly": "node testing/comprehensive-testing-strategy/automated-regression-suite.cjs weekly",
    "test:deployment": "node testing/testing-automation.js deployment",
    "test:data:generate": "node testing/comprehensive-testing-strategy/test-data-generator.cjs generate",
    "test:data:load": "node testing/data/test-data-manager.js load",
    "test:data:reset": "node testing/data/test-data-manager.js reset",
    "test:ci": "npm run test:deployment",
    "test:dev": "npm run test:smoke && npm run test:performance",
    "test:adaptive": "node testing/testing-automation.js adaptive",
    "test:generate": "node scripts/testing/adaptive-test-generator.js",
    "test:coverage": "node scripts/testing/coverage-analyzer.js",
    "test:optimize": "node testing/testing-automation.js optimize",
    "test:watch": "node scripts/testing/change-detector.js watch",
    "test:analyze": "node scripts/testing/change-detector.js analyze",
    "test:validate:coverage": "node scripts/testing/coverage-analyzer.js validate",
    "test:validate-system": "node scripts/testing/adaptive-system-test.js",
    "test:comprehensive": "node scripts/testing/run-comprehensive-tests.mjs",
    "test:quick:new": "node scripts/testing/run-quick-tests.mjs",
    "test:vibe": "npm run test:comprehensive",
    "test:validate:framework": "node scripts/testing/validate-framework.mjs",
    "test:performance:security": "node scripts/testing/run-performance-security-tests.mjs",
    "test:quality:gates": "node scripts/testing/run-quality-gates.mjs",
    "test:researcher-uat": "node testing/automated/researcher-uat-runner.js",
    "test:researcher-uat:quick": "node testing/automated/researcher-uat-runner.js quick",
    "test:researcher-uat:playwright": "npx playwright test testing/automated/researcher-uat.js",
    "test:participant-uat": "node testing/automated/participant-uat-runner.js",
    "test:participant-uat:quick": "node testing/automated/participant-uat-runner.js quick",
    "test:participant-uat:playwright": "npx playwright test testing/automated/participant-uat.js",
    "uat:researcher": "npm run test:researcher-uat",
    "uat:participant": "npm run test:participant-uat",
    "uat:quick": "npm run test:researcher-uat:quick",
    "uat:all": "node testing/automated/complete-uat-runner.js",
    "uat:complete": "npm run uat:all",
    "uat:status": "node testing/automated/complete-uat-runner.js quick",
    "uat:performance": "node testing/automated/uat-performance-integration.cjs",
    "uat:performance:quick": "node testing/automated/uat-performance-integration.cjs quick",
    "uat:performance:full": "node testing/automated/uat-performance-integration.cjs full",
    "uat:business": "node testing/automated/uat-business-dashboard.cjs",
    "uat:business:executive": "node testing/automated/uat-business-dashboard.cjs --historical",
    "uat:dashboard": "npm run uat:business",
    "uat:reports": "npm run uat:performance && npm run uat:business",
    "uat:monitoring": "node testing/automated/uat-monitoring-system.cjs",
    "uat:monitoring:health": "node testing/automated/uat-monitoring-system.cjs --health",
    "uat:monitoring:trends": "node testing/automated/uat-monitoring-system.cjs --trends",
    "setup:environment": "node scripts/setup/setup-environment.js",
    "setup:database": "node scripts/setup/setup-database.js",
    "setup:tools": "node scripts/setup/setup-development-tools.js",
    "setup:complete": "node scripts/setup/setup-complete.js",
    "setup": "npm run setup:complete",
    "ai:analyze": "node scripts/development/ai-automation-engine.js analyze-before-build",
    "ai:implement": "node scripts/development/ai-automation-engine.js auto-implement",
    "ai:prevent-duplicates": "node scripts/development/ai-automation-engine.js prevent-duplication",
    "ai:smart-extend": "node scripts/development/ai-automation-engine.js smart-extend",
    "ai:workflow": "node scripts/development/smart-workflow.js workflow",
    "ai:validate": "node scripts/development/completeness-validator.js validate",
    "ai:completeness": "node scripts/development/completeness-validator.js detailed",
    "ai:automation": "node scripts/development/ai-automation-engine.js all",
    "validate:typescript": "tsc --noEmit && echo 'TypeScript validation passed'",
    "validate:tests": "npm run test:quick && echo 'Tests passed'",
    "validate:build": "npm run build && echo 'Build successful'",
    "pre-commit": "npm run validate:typescript",
    "dev:enhanced": "npm run setup && npm run dev:fullstack",
    "vibe:status": "node scripts/vibe-coder-tracker.js --status",
    "vibe:track": "node scripts/vibe-coder-tracker.js --track",
    "vibe:complete": "node scripts/vibe-coder-tracker.js --complete",
    "vibe:report": "node scripts/vibe-coder-tracker.js --report",
    "config:test": "node scripts/testing/test-config.mjs",
    "config:validate": "npm run config:test",
    "scripts:help": "node scripts/utils/simple-scripts-helper.mjs",
    "scripts:validate": "node scripts/utils/validate-scripts.mjs",
    "scripts:docs": "node scripts/utils/npm-scripts-helper.js docs",
    "help": "npm run scripts:help",
    "health-check": "npm run dev:status && npm run type-check && npm run config:test",
    "blocks:test": "node scripts/testing/test-block-registry-simple.mjs",
    "blocks:validate": "npm run blocks:test && npm run type-check",
    "notifications:test": "node scripts/testing/test-notification-system-simple.mjs",
    "notifications:validate": "npm run notifications:test && npm run type-check",
    "notifications:demo": "npm run notifications:test && echo 'ðŸ“¡ Notification system examples available in docs/vibe-coder/examples/'",
    "sse:test": "npm run notifications:test",
    "realtime:test": "npm run notifications:test",
    "testing:framework": "node scripts/testing/test-advanced-testing-framework.mjs",
    "testing:integration": "node scripts/testing/test-advanced-testing-integration.mjs",
    "testing:validate": "npm run testing:framework && npm run testing:integration",
    "test:advanced": "npm run testing:framework",
    "test:framework:integration": "npm run testing:integration",
    "test:framework:all": "npm run testing:validate && npm run type-check",
    "performance:test": "node scripts/testing/test-performance-monitoring.mjs",
    "performance:integration": "node scripts/testing/test-performance-integration.mjs",
    "performance:validate": "npm run performance:test && npm run performance:integration",
    "performance:all": "npm run performance:validate && npm run type-check",
    "performance:check": "node scripts/testing/validate-performance-system.mjs",
    "perf:test": "npm run performance:test",
    "perf:integration": "npm run performance:integration",
    "perf:validate": "npm run performance:validate",
    "perf:check": "npm run performance:check",
    "security:test": "node scripts/testing/test-security-system.mjs",
    "security:integration": "node scripts/testing/test-security-integration.mjs",
    "security:validate": "npm run security:test && npm run security:integration",
    "security:all": "npm run security:validate && npm run type-check",
    "security:check": "node scripts/testing/validate-security-system.mjs",
    "sec:test": "npm run security:test",
    "sec:integration": "npm run security:integration",
    "sec:validate": "npm run security:validate",
    "sec:check": "npm run security:check",
    "perf:audit": "node testing/comprehensive-testing-strategy/performance-monitor.cjs audit",
    "perf:monitor": "node testing/comprehensive-testing-strategy/performance-monitor.cjs monitor",
    "test:status": "node testing/comprehensive-testing-strategy/testing-status-dashboard.js",
    "test:help": "node testing/comprehensive-testing-strategy/simple-test-runner.cjs",
    "cleanup:master": "node scripts/cleanup/master-cleanup.js",
    "cleanup:components": "node scripts/cleanup/simple-component-cleanup.js --dry-run",
    "cleanup:components:analyze": "node scripts/cleanup/simple-component-cleanup.js --dry-run",
    "cleanup:components:remove": "node scripts/cleanup/simple-component-cleanup.js",
    "cleanup:safe-remove": "powershell -ExecutionPolicy Bypass -File scripts/cleanup/quick-remove.ps1",
    "cleanup:organize": "powershell -ExecutionPolicy Bypass -File scripts/cleanup/simple-cleanup.ps1",
    "project:analyze": "node scripts/cleanup/analyze-components-fixed.js && echo 'See: docs/reports/component-usage-analysis.md'",
    "project:status": "echo 'See: docs/requirements/MASTER_REQUIREMENTS.md for current status'",
    "cleanup:phase1": "powershell -ExecutionPolicy Bypass -File scripts/cleanup/quick-remove.ps1",
    "cleanup:phase2": "powershell -ExecutionPolicy Bypass -File scripts/cleanup/phase2-targeted.ps1",
    "cleanup:phase3": "powershell -ExecutionPolicy Bypass -File scripts/cleanup/phase3-shared.ps1",
    "cleanup:final": "powershell -ExecutionPolicy Bypass -File scripts/cleanup/final-cleanup.ps1",
    "project:cleanup-report": "echo 'See: docs/reports/FINAL_COMPREHENSIVE_CLEANUP_REPORT.md'",
    "project:requirements": "echo 'See: docs/requirements/MASTER_REQUIREMENTS.md'"
  },
  "dependencies": {
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/modifiers": "^9.0.0",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@executeautomation/playwright-mcp-server": "^1.0.6",
    "@hookform/resolvers": "^5.0.1",
    "@modelcontextprotocol/server-brave-search": "^0.6.2",
    "@modelcontextprotocol/server-filesystem": "^2025.7.1",
    "@modelcontextprotocol/server-memory": "^2025.4.25",
    "@sentry/react": "^9.38.0",
    "@sentry/tracing": "^7.120.3",
    "@supabase/supabase-js": "^2.50.0",
    "@tailwindcss/postcss": "^4.1.8",
    "@tanstack/react-query": "^5.77.2",
    "@types/multer": "^1.4.12",
    "@types/nodemailer": "^6.4.17",
    "@types/socket.io": "^3.0.2",
    "@vercel/blob": "^1.1.1",
    "@vercel/node": "^2.3.0",
    "@zoom/meetingsdk": "^3.13.2",
    "axios": "^1.9.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cors": "^2.8.5",
    "date-fns": "^4.1.0",
    "dotenv": "^16.5.0",
    "express": "^4.21.2",
    "express-validator": "^7.2.1",
    "framer-motion": "^12.22.0",
    "glob": "^11.0.3",
    "lucide-react": "^0.511.0",
    "multer": "^2.0.0",
    "node-fetch": "^3.3.2",
    "nodemailer": "^7.0.3",
    "openai": "^5.8.2",
    "playwright": "^1.53.1",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-hook-form": "^7.56.4",
    "react-hot-toast": "^2.5.2",
    "react-router-dom": "^7.6.1",
    "recharts": "^2.15.3",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "tailwind-merge": "^3.3.1",
    "zod": "^3.25.32",
    "zustand": "^5.0.5"
  },
  "devDependencies": {
    "@eslint/js": "^9.25.0",
    "@playwright/test": "^1.53.2",
    "@tailwindcss/forms": "^0.5.9",
    "@types/bcryptjs": "^3.0.0",
    "@types/cors": "^2.8.18",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/node": "^22.15.24",
    "@types/react": "^19.1.2",
    "@types/react-dom": "^19.1.2",
    "@types/uuid": "^10.0.0",
    "@vitejs/plugin-react": "^4.4.1",
    "autoprefixer": "^10.4.20",
    "axe-core": "^4.10.3",
    "chai": "^5.2.0",
    "chrome-launcher": "^1.2.0",
    "concurrently": "^8.2.0",
    "cross-env": "^7.0.3",
    "eslint": "^9.25.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^16.0.0",
    "lighthouse": "^12.7.1",
    "mocha": "^11.7.1",
    "nodemon": "^3.1.10",
    "pa11y": "^9.0.0",
    "postcss": "^8.5.3",
    "puppeteer": "^24.11.2",
    "tailwindcss": "^3.4.14",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.4",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.30.1",
    "vercel": "^32.0.0",
    "vite": "^6.3.5"
  },
  "overrides": {
    "debug": "^4.3.1",
    "semver": "^7.5.2",
    "tar": "^6.2.1",
    "undici": "^5.28.6",
    "path-to-regexp": "^1.8.0"
  }
}
