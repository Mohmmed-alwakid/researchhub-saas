{
  "name": "ResearchHub User Registration Monitoring Workflow",
  "meta": {
    "instanceId": "researchhub-auth-monitoring"
  },
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "interval": 4
            }
          ]
        }
      },
      "id": "schedule-trigger-auth",
      "name": "Every 4 Hours Auth Test",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [200, 200]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://researchhub-saas.vercel.app/api/auth-consolidated",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "register"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "n8n-ResearchHub-AuthValidator/1.0"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "{\n  \"email\": \"test+{{ new Date().getTime() }}@n8n-automation.test\",\n  \"password\": \"TestPassword123!\",\n  \"role\": \"participant\",\n  \"fullName\": \"N8N Test User\",\n  \"skipEmailVerification\": true\n}",
        "options": {
          "timeout": 15000,
          "retry": {
            "enabled": true,
            "maxTries": 2
          }
        }
      },
      "id": "test-registration",
      "name": "Test User Registration",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [400, 200],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://researchhub-saas.vercel.app/api/auth-consolidated",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "login"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "n8n-ResearchHub-AuthValidator/1.0"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "{\n  \"email\": \"{{ $node['Test User Registration'].json.email }}\",\n  \"password\": \"TestPassword123!\"\n}",
        "options": {
          "timeout": 15000,
          "retry": {
            "enabled": true,
            "maxTries": 2
          }
        }
      },
      "id": "test-login",
      "name": "Test User Login",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [600, 200],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "GET",
        "url": "https://researchhub-saas.vercel.app/api/user-profile-consolidated",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "get-profile"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ 'Bearer ' + $node['Test User Login'].json.accessToken }}"
            },
            {
              "name": "User-Agent",
              "value": "n8n-ResearchHub-AuthValidator/1.0"
            }
          ]
        },
        "options": {
          "timeout": 10000,
          "retry": {
            "enabled": true,
            "maxTries": 2
          }
        }
      },
      "id": "test-profile-access",
      "name": "Test Profile Access",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [800, 200],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://researchhub-saas.vercel.app/api/auth-consolidated",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "refresh-token"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "User-Agent",
              "value": "n8n-ResearchHub-AuthValidator/1.0"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "jsonBody": "{\n  \"refreshToken\": \"{{ $node['Test User Login'].json.refreshToken }}\"\n}",
        "options": {
          "timeout": 10000,
          "retry": {
            "enabled": true,
            "maxTries": 2
          }
        }
      },
      "id": "test-token-refresh",
      "name": "Test Token Refresh",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1000, 200],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "row",
        "operation": "delete",
        "tableId": "auth.users",
        "filterType": "manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "email",
              "keyValue": "={{ $node['Test User Registration'].json.email }}",
              "condition": "equals"
            }
          ]
        }
      },
      "id": "cleanup-test-user",
      "name": "Cleanup Test User",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [1200, 200],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Aggregate authentication flow validation results\nconst registration = $node['Test User Registration'].json;\nconst login = $node['Test User Login'].json;\nconst profile = $node['Test Profile Access'].json;\nconst tokenRefresh = $node['Test Token Refresh'].json;\nconst cleanup = $node['Cleanup Test User'].json;\n\nconst results = {\n  timestamp: new Date().toISOString(),\n  userRegistration: {\n    success: registration?.statusCode === 200 || registration?.userId ? 'PASS' : 'FAIL',\n    statusCode: registration?.statusCode || 'ERROR',\n    userId: registration?.userId || 'N/A'\n  },\n  userLogin: {\n    success: login?.statusCode === 200 && login?.accessToken ? 'PASS' : 'FAIL',\n    statusCode: login?.statusCode || 'ERROR',\n    hasToken: login?.accessToken ? 'YES' : 'NO'\n  },\n  profileAccess: {\n    accessible: profile?.statusCode === 200 ? 'PASS' : 'FAIL',\n    statusCode: profile?.statusCode || 'ERROR'\n  },\n  tokenRefresh: {\n    refreshed: tokenRefresh?.statusCode === 200 && tokenRefresh?.accessToken ? 'PASS' : 'FAIL',\n    statusCode: tokenRefresh?.statusCode || 'ERROR',\n    newToken: tokenRefresh?.accessToken ? 'YES' : 'NO'\n  },\n  cleanup: {\n    deleted: cleanup?.statusCode === 200 || cleanup?.success ? 'PASS' : 'FAIL',\n    statusCode: cleanup?.statusCode || 'N/A'\n  }\n};\n\n// Calculate overall status\nconst allPassed = Object.values(results).slice(1).every(test => \n  Object.values(test).some(value => value === 'PASS')\n);\n\nresults.overallStatus = allPassed ? 'ALL_PASS' : 'SOME_FAIL';\n\n// Count failures\nresults.failureCount = Object.values(results).slice(1).reduce((count, test) => {\n  return count + (Object.values(test).includes('FAIL') ? 1 : 0);\n}, 0);\n\nreturn results;"
      },
      "id": "aggregate-auth-results",
      "name": "Aggregate Auth Test Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1400, 200]
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "id": "condition-1",
              "leftValue": "={{ $json.overallStatus }}",
              "rightValue": "ALL_PASS",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ]
        }
      },
      "id": "route-auth-results",
      "name": "Route Auth Test Results",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1600, 200]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "post",
        "select": "channel",
        "channel": "#researchhub-monitoring",
        "text": "âœ… **ResearchHub Authentication: ALL SYSTEMS OPERATIONAL**",
        "attachments": [
          {
            "color": "#36a64f",
            "title": "={{ 'Authentication Flow Validation - ' + $json.timestamp }}",
            "fields": {
              "item": [
                {
                  "title": "User Registration",
                  "value": "={{ $json.userRegistration.success + ' (' + $json.userRegistration.statusCode + ')' }}",
                  "short": true
                },
                {
                  "title": "User Login",
                  "value": "={{ $json.userLogin.success + ' (' + $json.userLogin.statusCode + ')' }}",
                  "short": true
                },
                {
                  "title": "Profile Access",
                  "value": "={{ $json.profileAccess.accessible + ' (' + $json.profileAccess.statusCode + ')' }}",
                  "short": true
                },
                {
                  "title": "Token Refresh",
                  "value": "={{ $json.tokenRefresh.refreshed + ' (' + $json.tokenRefresh.statusCode + ')' }}",
                  "short": true
                }
              ]
            },
            "footer": "ResearchHub Auth Monitor",
            "footer_icon": "https://researchhub-saas.vercel.app/favicon.ico"
          }
        ]
      },
      "id": "auth-success-notification",
      "name": "Auth Success Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [1800, 100],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "post",
        "select": "channel",
        "channel": "#researchhub-alerts",
        "text": "ðŸš¨ **ResearchHub Authentication: SYSTEM FAILURES DETECTED**",
        "attachments": [
          {
            "color": "#ff0000",
            "title": "={{ 'Authentication System Failures - ' + $json.timestamp }}",
            "text": "={{ $json.failureCount + ' authentication step(s) failed. User auth system requires immediate attention.' }}",
            "fields": {
              "item": [
                {
                  "title": "User Registration",
                  "value": "={{ $json.userRegistration.success + ' (' + $json.userRegistration.statusCode + ')' }}",
                  "short": true
                },
                {
                  "title": "User Login",
                  "value": "={{ $json.userLogin.success + ' (' + $json.userLogin.statusCode + ')' }}",
                  "short": true
                },
                {
                  "title": "Profile Access",
                  "value": "={{ $json.profileAccess.accessible + ' (' + $json.profileAccess.statusCode + ')' }}",
                  "short": true
                },
                {
                  "title": "Token Refresh",
                  "value": "={{ $json.tokenRefresh.refreshed + ' (' + $json.tokenRefresh.statusCode + ')' }}",
                  "short": true
                }
              ]
            },
            "footer": "ResearchHub Auth Monitor - CRITICAL",
            "footer_icon": "https://researchhub-saas.vercel.app/favicon.ico"
          }
        ]
      },
      "id": "auth-failure-notification",
      "name": "Auth Failure Alert",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.3,
      "position": [1800, 300],
      "onError": "continueRegularOutput"
    }
  ],
  "connections": {
    "Every 4 Hours Auth Test": {
      "main": [
        [
          {
            "node": "Test User Registration",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test User Registration": {
      "main": [
        [
          {
            "node": "Test User Login",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test User Login": {
      "main": [
        [
          {
            "node": "Test Profile Access",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Profile Access": {
      "main": [
        [
          {
            "node": "Test Token Refresh",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Token Refresh": {
      "main": [
        [
          {
            "node": "Cleanup Test User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cleanup Test User": {
      "main": [
        [
          {
            "node": "Aggregate Auth Test Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate Auth Test Results": {
      "main": [
        [
          {
            "node": "Route Auth Test Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route Auth Test Results": {
      "main": [
        [
          {
            "node": "Auth Success Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Auth Failure Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "timezone": "UTC",
    "saveExecutionProgress": true,
    "saveManualExecutions": true
  },
  "tags": [
    {
      "id": "researchhub",
      "name": "ResearchHub"
    },
    {
      "id": "auth-monitoring",
      "name": "Auth Monitoring"
    },
    {
      "id": "production",
      "name": "Production"
    }
  ]
}
